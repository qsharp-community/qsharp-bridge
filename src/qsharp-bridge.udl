namespace qsharp_bridge {

    [Throws=QsError]
    ExecutionState run_qs([ByRef]string source);

    [Throws=QsError]
    sequence<ExecutionState> run_qs_shots([ByRef]string source, u32 shots);

    [Throws=QsError]
    Circuit circuit([ByRef]string source);

    [Throws=QsError]
    string qir([ByRef]string expression);

    [Throws=QsError]
    string qasm2([ByRef]string source);

    [Throws=QsError]
    string estimate([ByRef]string source, string? job_params);

    [Throws=QsError]
    string estimate_expression([ByRef]string expression, string? job_params);
};

[Error]
interface QsError {
    ErrorMessage(string error_text);
};

dictionary ExecutionState {
    sequence<QubitState> states;
    u64 qubit_count;
    sequence<string> messages;
    string? result;
};

dictionary QubitState {
    string id;
    f64 amplitude_real;
    f64 amplitude_imaginary;
};

dictionary Circuit {
    sequence<Operation> operations;
    sequence<Qubit> qubits;
};

dictionary Operation {
    string gate;
    string? display_args;
    boolean is_controlled;
    boolean is_adjoint;
    boolean is_measurement;
    sequence<Register> controls;
    sequence<Register> targets;
    sequence<Operation> children;
};

dictionary Register {
    u64 q_id;
    u64 register_type;
    u64? c_id;
};

dictionary Qubit {
    u64 id;
    u64 num_children;
};